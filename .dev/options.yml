activate:
  __default: true
  __desc:
    en: |-
      Enable the plugin.
      You can toggle it anytime with the `:AutoInputSwitch on|off` command.
    ja: |-
      プラグインを有効にする。
      `:AutoInputSwitch on|off` コマンドでいつでも切り替えることができます。

async:
  __default: false
  __desc:
    en: |-
      Run shell commands (`cmd_get` / `cmd_set`) asynchronously?
        * `false`: Run synchronously (recommended).
                   May cause slight lag if you switch rapidly between Insert and Normal mode.
        *  `true`: Run asynchronously. Removes lag but may be less reliable.
    ja: |-
      シェルコマンド (`cmd_get` / `cmd_set`) の実行を非同期で行う？
        * `false`: 同期実行 (推奨) 。
                   Insert と Normal モードを素早く切り替えた際などに僅かなラグが発生する可能性があります。
        *  `true`: 非同期実行。ラグはありませんが、動作がやや不安定です。
log:
  __default: false
  __desc:
    en: |-
      Output logs to a file?
      Useful for debugging `cmd_get` / `cmd_set`.
      The log file is cleared every time `setup()` is called.

      Log file path:
        * Linux/macOS: `~/.local/state/nvim/auto-input-switch.log`
        *     Windows: `~/AppData/Local/nvim-data/auto-input-switch.log`
    ja: |-
      ログをファイルに出力する？
      `cmd_get` / `cmd_set` をデバッグする際に有用です。
      ログファイルは `setup()` が実行される度に初期化されます。

      ログファイルのパス:
        * Linux/macOS: `~/.local/state/nvim/auto-input-switch.log`
        *     Windows: `~/AppData/Local/nvim-data/auto-input-switch.log`

prefix:
  __default: AutoInputSwitch
  __desc:
    en: |-
      Prefix for command names.
      If you prefer shorter commands, set this to something like `'AIS'`.
    ja: |-
      コマンド名のプリフィックス。
      例えば `'AIS'` などにすることでコマンドを短くすることができます。

popup:
  __desc:
    en: When the plugin switches the input method, it can notify you with a popup.
    ja: プラグインによって入力言語が変更される際、ポップアップ表示でそれを知らせます。

  enable:
    __default: true
    __desc:
      en: Show popups?
      ja: ポップアップを表示する？

  duration:
    __default: 1500
    __desc:
      en: How long the popup remains visible (ms).
      ja: ポップアップが表示されている時間 (ms) 。

  pad:
    __default: true
    __desc:
      en: Add leading and trailing spaces in popup text?
      ja: ポップアップテキストの左右に空白を入れる？

  hl_group:
    __default: PmenuSel
    __desc:
      en: Highlight group for the popup window.
      ja: ポップアップウィンドウのハイライトグループ。

  window:
    __desc:
      en: Popup window configuration (:h |nvim_open_win()|).
      ja: ポップアップウィンドウの設定 (:h |nvim_open_win()|) 。

    border:
      __default: none
      __desc:
        en: Border style.
        ja: ボーダーのスタイル。

    zindex:
      __default: 50
      __desc:
        en: Rendering priority.
        ja: 表示の優先度。

    row:
      __default: 1
      __desc:
        en: Horizontal offset.
        ja: 横方向のオフセット。

    col:
      __default: 0
      __desc:
        en: Vertical offset.
        ja: 縦方向のオフセット。

    relative:
      __default: cursor
      __desc:
        en: |-
          Origin of the offsets.
          One of: `'editor'`, `'win'`, `'cursor'`, or `'mouse'`
        ja: |-
          オフセットの基準となる対象。
          次の何れか: `'editor'`, `'win'`, `'cursor'`, `'mouse'`

    anchor:
      __default: NW
      __desc:
        en: |-
          Corner used to anchor the popup.
            * `'NW'`: Northwest
            * `'NE'`: Northeast
            * `'SW'`: Southwest
            * `'SE'`: Southeast
        ja: |-
          ポップアップの四隅のうちどれを基準位置に合わせるか。
            * `'NW'`: 左上
            * `'NE'`: 右上
            * `'SW'`: 左下
            * `'SE'`: 右下

  labels:
    __desc:
      en: Popup text for each input method.
      ja: 各入力言語のポップアップテキスト。

    normal_input:
      __default: A
      __desc:
        en: Popup text for Normalize. Set `false` to disable.
        ja: Normalize 時に表示するポップアップテキスト。`false` で非表示。

    lang_inputs:
      __desc:
        en: Popup texts for Restore and Match.
        ja: Restore と Match 時に表示するポップアップテキスト。

      Ja:
        __default: あ
        __desc:
          en: Popup text for Japanese input.
          ja: 日本語入力時のポップアップテキスト。

      Zh:
        __default: 拼
        __desc:
          en: Popup text for Chinese input.
          ja: 中国語入力時のポップアップテキスト。

      Ko:
        __default: 한
        __desc:
          en: Popup text for Korean input.
          ja: 韓国語入力時のポップアップテキスト。

normalize:
  __desc:
    en: |-
      Outside Insert mode, the plugin can force the input method to Latin.
      This feature is called "Normalize".
    ja: |-
      Insert モードではない時、入力言語を英数に強制することができます。
      この機能を "Normalize" と呼称します。

  enable:
    __default: true
    __desc:
      en: Enable Normalize?
      ja: Normalize を有効にする？

  on:
    __default:
      - BufLeave
      - WinLeave
      - FocusGained
      - ExitPre
      - QuitPre

    __desc:
      en: Events that trigger Normalize (:h |events|).
      ja: Normalize を実行するイベント (:h |events|) 。

  on_mode_change:
    __default:
      - '[iR]:n'

    __desc:
      en: |-
        Mode transition patterns that trigger Normalize.
        If not `false`, Normalize is triggered by the 'ModeChanged' event matched with one of these patterns.
        See:
          * :h |autocmd-pattern|
          * :h |ModeChanged|
          * :h |mode()|

        Default:
          '[iR]:n' (From Insert/Replace to Normal mode)
      ja: |-
        Normalize のトリガーとなる、モードの遷移パターン。
        `false` ではない場合、このパターンに該当する 'ModeChanged' イベントが発生した際に Normalize が実行されます。
        参照:
          * :h |autocmd-pattern|
          * :h |ModeChanged|
          * :h |mode()|

        Default:
          '[iR]:n' (Insert/Replace から Normal モード)

  filetypes:
    __default: '*'
    __desc:
      en: |-
        Filetypes where Normalize is enabled.
        Example: >lua
          filetypes = { 'markdown', 'text' },
        <
      ja: |-
        Normalize が有効になるファイルタイプ。
        例: >lua
          filetypes = { 'markdown', 'text' },
        <

  debounce:
    __default: 500
    __desc:
      en: Debounce time (ms). Prevents repeated Normalize triggers.
      ja: デバウンス時間 (ms) 。Normalize の連続実行を抑制します。

  buf_condition:
    __default: null
    __desc:
      en: |-
        Optional function that decides whether Normalize is enabled for a buffer.
        Called on each buffer creation with its buffer number.
        Return `true` to enable Normalize for that buffer.
        Example: >lua
          -- Enable only in listed buffers
          buf_condition = function(buf)
            return vim.bo[buf].buflisted
          end,
        <
      ja: |-
        Normalize がバッファに対して有効となる条件を定義する関数です。
        バッファが作成される度、そのバッファ番号を引数にして呼び出されます。
        `true` が返された場合にのみ、そのバッファで Normalize が有効になります。
        例: >lua
          -- Enable only in listed buffers
          buf_condition = function(buf)
            return vim.bo[buf].buflisted
          end,
        <

restore:
  __desc:
    en: |-
      When Normalize is about to run, the plugin saves the current input method.
      When you next enter Insert or Replace mode, it restores that input method.
      This feature is called "Restore".
    ja: |-
      Normalize が実行される際、直前に使っていた入力言語がプラグインによって保存されます。
      そして次に Insert か Replace モードに入った際、保存されていた入力言語に自動で復帰します。
      この機能を "Restore" と呼称します。

  enable:
    __default: true
    __desc:
      en: Enable Restore?
      ja: Restore を有効にする？

  on:
    __default:
      - FocusGained

    __desc:
      en: Events that trigger Restore (:h |events|).
      ja: Restore を実行するイベント (:h |events|) 。

  on_mode_change:
    __default:
      - 'n:[iR]'

    __desc:
      en: |-
        Mode transition patterns that trigger Restore.
        If not `false`, Restore is triggered by the 'ModeChanged' event matched with one of these patterns.
        Default: 'n:[iR]' (From Normal to Insert/Replace mode)
      ja: |-
        Restore のトリガーとなる、モードの遷移パターン。
        `false` ではない場合、このパターンに該当する 'ModeChanged' イベントが発生した際に Restore が実行されます。
        デフォルト: 'n:[iR]' (Normal から Insert/Replace モード)


  filetypes:
    __default: '*'
    __desc:
      en: |-
        Filetypes where Restore is enabled.
        Example: >lua
          filetypes = { 'markdown', 'text' },
        <
      ja: |-
        Restore が有効になるファイルタイプ。
        例: >lua
          filetypes = { 'markdown', 'text' },
        <

  debounce:
    __default: 500
    __desc:
      en: Debounce time (ms). Prevents repeated Restore triggers.
      ja: デバウンス時間 (ms) 。Restore の連続実行を抑制します。

  buf_condition:
    __default: null
    __desc:
      en: |-
        Function that decides whether Restore is enabled for a buffer.
        Called on each buffer creation with its buffer number.
        Return `true` to enable Restore for that buffer.
        By default, returns `true` if the buffer is 'modifiable'.
        You can override this or disable it by setting `false`.
      ja: |-
        Restore がバッファに対して有効となる条件を定義する関数です。
        バッファが作成される度、そのバッファ番号を引数にして呼び出されます。
        `true` が返された場合にのみ、そのバッファで Restore が有効になります。
        デフォルトでは、バッファが 'modifiable' の場合に `true` が返されます。
        自作の関数で上書きするか、`false` をセットすることで無効化することもできます。

  exclude_pattern:
    __default: '<!CODE>[==[[-+a-zA-Z0-9@#$%^&/\\¥=~<>(){}\[\];:`]]==]'
    __desc:
      en: |-
        Regex pattern checked before Restore runs.
        If nearby characters match this, Restore is canceled.
        Set `false` to disable this check.
        Default: matches alphanumerics and common punctuation.
      ja: |-
        この正規表現は Restore が実行される直前にチェックされます。
        カーソル付近の文字がこれにマッチすると、Restore がキャンセルされます。
        `false` をセットするとこのチェックは無効になります。
        デフォルト: 全ての半角英数と、ほとんどの半角記号にマッチします。

match:
  __desc:
    en: |-
      Detects the language of nearby characters on Insert/Replace mode entry
      and switches to the matching input method.
      This feature is called "Match".
      If Match and Restore trigger together, Match takes priority.
      Disabled by default.
    ja: |-
      Insert/Replace モードに入った際、カーソル付近の文字にマッチする入力言語に
      自動で切り替えます。
      この機能を "Match" と呼称します。
      Match と Restore が同時に実行された場合は Match が優先されます。
      この機能はデフォルトでは無効に設定されています。

  enable:
    __default: false
    __desc:
      en: Enable Match?
      ja: Match を有効にする？

  on:
    __default:
      - FocusGained

    __desc:
      en: Events that trigger Match (:h |events|).
      ja: Match を実行するイベント (:h |events|) 。

  on_mode_change:
    __default:
      - '[nvV]:[iR]'

    __desc:
      en: |-
        Mode transition patterns that trigger Match.
        If not `false`, Match is triggered by the 'ModeChanged' event matched with one of these patterns.
        Default: '[nvV]:[iR]' (From Normal/Visual to Insert/Replace mode)
      ja: |-
        Match のトリガーとなる、モードの遷移パターン。
        `false` ではない場合、このパターンに該当する 'ModeChanged' イベントが発生した際に Match が実行されます。
        デフォルト: '[nvV]:[iR]' (Normal/Visual から Insert/Replace モード)

  filetypes:
    __default: '*'
    __desc:
      en: |-
        Filetypes where Match is enabled.
        Example: >lua
          filetypes = { 'markdown', 'text' },
        <
      ja: |-
        Match が有効になるファイルタイプ。
        例: >lua
          filetypes = { 'markdown', 'text' },
        <

  debounce:
    __default: 500
    __desc:
      en: Debounce time (ms). Prevents repeated Match triggers.
      ja: デバウンス時間 (ms) 。Match の連続実行を抑制します。

  buf_condition:
    __default: null
    __desc:
      en: |-
        Function that decides whether Match is enabled for a buffer.
        Called on each buffer creation with its buffer number.
        Return `true` to enable Match for that buffer.
        By default, returns `true` if the buffer is 'modifiable'.
        You can override this or disable it by setting `false`.
      ja: |-
        Match がバッファに対して有効となる条件を定義する関数です。
        バッファが作成される度、そのバッファ番号を引数にして呼び出されます。
        `true` が返された場合にのみ、そのバッファで Match が有効になります。
        デフォルトでは、バッファが 'modifiable' の場合に `true` が返されます。
        自作の関数で上書きするか、`false` をセットすることで無効化することもできます。

  languages:
    __desc:
      en: |-
        Languages to detect and match.
        Format: >lua
          languages = {
            LanguageName = {
              enable = true,
              priority = Number,
              pattern = 'Regex'
            },
          },
        <
        Set `enable` of those you want to use to `true`.
        Each `pattern` must be a valid regex. Specify the unicode ranges of the language.
        Add custom languages if needed, and define the corresponding input methods as well in `os_settings[OS].lang_inputs`.
      ja: |-
        Match が検知する言語のリスト。
        フォーマット: >lua
          languages = {
            言語名 = {
              enable = true,
              priority = 数値,
              pattern = '正規表現'
            },
          },
        <
        使用したい言語の `enable` を `true` に設定してください。
        `pattern` は有効な正規表現でなけれなりません。その言語のユニコード範囲を指定すると良いでしょう。
        カスタム言語を追加する場合は、併せて対応する入力言語も `os_settings[OS].lang_inputs` に追加してください。

    Ru:
      __default:
        enable: false
        priority: 0
        pattern: '<!CODE>[==[[\u0400-\u04ff]]==]'

      __desc:
        en: Unicode ranges for Russian.
        ja: ロシア語のユニコード範囲。

    Ja:
      __default:
        enable: false
        priority: 0
        pattern: '<!CODE>[==[[\u3000-\u30ff\uff00-\uffef\u4e00-\u9fff]]==]'

      __desc:
        en: Unicode ranges for Japanese.
        ja: 日本語のユニコード範囲。

    Zh:
      __default:
        enable: false
        priority: 0
        pattern: '<!CODE>[==[[\u3000-\u303f\u4e00-\u9fff\u3400-\u4dbf\u3100-\u312f]]==]'

      __desc:
        en: Unicode ranges for Chinese.
        ja: 中国語のユニコード範囲。

    Ko:
      __default:
        enable: false
        priority: 0
        pattern: '<!CODE>[==[[\u3000-\u303f\u1100-\u11ff\u3130-\u318f\uac00-\ud7af]]==]'

      __desc:
        en: Unicode ranges for Korean.
        ja: 韓国語のユニコード範囲。

  lines:
    __desc:
      en: |-
        When the current line is empty or whitespace-only,
        Match searches nearby lines as well.
      ja: |-
        現在の行が空行か空白文字のみ場合、
        前後の行に対しても Match による検索を行います。

    above:
      __default: 1
      __desc:
        en: Number of lines above to search.
        ja: 上方向に最大で何行検索するか。

    below:
      __default: 1
      __desc:
        en: Number of lines below to search.
        ja: 下方向に最大で何行検索するか。

    exclude_pattern:
      __default: '<!CODE>[==[^\s*\%([-+*:|>]\|[0-9]\+\.\)\s]==]'
      __desc:
        en: |-
          Regex pattern for lines that stop language detection.
          Useful for Markdown lists, table rows, or blockquotes.
          Set `false` to disable.
        ja: |-
          検索行がこの正規表現にマッチしたら、検索をキャンセルします。
          マークダウン記法でリストやテーブル、引用ブロック等を記述する際に有用です。
          `false` で無効化できます。

os:
  __default: false
  __desc:
    en: |-
      Specify your operating system.
      One of: `'macos'`, `'windows'`, `'linux'`, or `false` for auto-detection.
    ja: |-
      使用する OS を明示してください。
      次の何れか: `'macos'`, `'windows'`, `'linux'`, または `false` で自動検出。

os_settings:
  __desc:
    en: OS-specific settings for input methods and commands.
    ja: OS 毎の入力言語とコマンドの設定。

  macos:
    enable:
      __default: true
      __desc:
        en: Enable macOS-specific settings?
        ja: macOS 用の設定を有効にする？

    cmd_get:
      __default: 'im-select'
      __desc:
        en: Command to get the current input method ID.
        ja: 現在の入力言語 ID を取得するコマンド。

    cmd_set:
      __default: 'im-select %s'
      __desc:
        en: Command to set a new input method (`%s` will be replaced with the target ID).
        ja: 入力言語を切り替えるコマンド (`%s` が切り替え先の入力言語 ID で置換される) 。

    normal_input:
      __default: false
      __desc:
        en: |-
          Input method used for Normalize (`false` = auto-detect).
          Examples: >lua
            normal_input = 'com.apple.keylayout.ABC',
            normal_input = 'com.apple.keylayout.US',
            normal_input = 'com.apple.keylayout.USExtended',
          <
          You can also use a table like this: >lua
            normal_input = { 'com.apple.keylayout.ABC', 'eisu' },
          <
            The first string must match `cmd_get` output.
            The second is the argument passed to `cmd_set`.
        ja: |-
          Normalize 時に使用する入力言語 (`false` = 自動検出) 。
          例: >lua
            normal_input = 'com.apple.keylayout.ABC',
            normal_input = 'com.apple.keylayout.US',
            normal_input = 'com.apple.keylayout.USExtended',
          <
          次のようにテーブルを使用することも可: >lua
            normal_input = { 'com.apple.keylayout.ABC', 'eisu' },
          <
            最初の文字列は `cmd_get` の出力と照合する値。
            二番目の文字列は `cmd_set` に渡される引数。

    lang_inputs:
      __desc:
        en: |-
          Input methods corresponding to `match.languages`.
          Format: >lua
            lang_inputs = {
              LanguageName = 'Input Method ID',
            },
          <
          Just like `normal_input`, it can also be a table: >lua
            lang_inputs = {
              LanguageName = { 'Input Method ID', 'Argument' },
            },
          <
            The first string must match `cmd_get` output.
            The second is the argument passed to `cmd_set`.

        ja: |-
          `match.languages` 内の各言語に紐づける入力言語の設定。
          フォーマット: >lua
            lang_inputs = {
              言語名 = '入力言語ID',
            },
          <
          `normal_input` 同様、テーブルも使用可: >lua
            lang_inputs = {
              言語名 = { '入力言語ID', '引数' },
            },
          <
            最初の文字列は `cmd_get` の出力と照合する値。
            二番目の文字列は `cmd_set` に渡される引数。

      Ru:
        __default: 'com.apple.keylayout.Russian'
        __desc:
          en: Input method ID for Russian.
          ja: ロシア語の入力言語 ID 。

      Ja:
        __default: 'com.apple.inputmethod.Kotoeri.Japanese'
        __desc:
          en: Input method ID for Japanese.
          ja: 日本語の入力言語 ID 。

      Zh:
        __default: 'com.apple.inputmethod.SCIM.ITABC'
        __desc:
          en: Input method ID for Chinese.
          ja: 中国語の入力言語 ID 。

      Ko:
        __default: 'com.apple.inputmethod.Korean.2SetKorean'
        __desc:
          en: Input method ID for Korean.
          ja: 韓国語の入力言語 ID 。

  windows:
    enable:
      __default: true
      __desc:
        en: Enable Windows-specific settings?
        ja: Windows 用の設定を有効にする？

    cmd_get:
      __default: 'im-select.exe'
      __desc:
        en: Command to get the current input method ID.
        ja: 現在の入力言語 ID を取得するコマンド。

    cmd_set:
      __default: 'im-select.exe %s'
      __desc:
        en: Command to set a new input method (`%s` will be replaced with the target ID).
        ja: 入力言語を切り替えるコマンド (`%s` が切り替え先の入力言語 ID で置換される) 。

    normal_input:
      __default: false
      __desc:
        en: |-
          Input method used for Normalize (`false` = auto-detect).
          Example: >lua
            normal_input = '1033', -- US English
          <
          Other formats:
            See: |auto-input-switch.os_settings.macos.normal_input|
        ja: |-
          Normalize 時に使用する入力言語 (`false` = 自動検出) 。
          例: >lua
            normal_input = '1033', -- US English
          <
          その他のフォーマット:
            参照: |auto-input-switch-ja.os_settings.macos.normal_input|

    lang_inputs:
      __desc:
        en: |-
          Input methods corresponding to `match.languages`.
          For more details, see: |auto-input-switch.os_settings.macos.lang_inputs|
        ja: |-
          `match.languages` 内の各言語に紐づける入力言語の設定。
          その他の詳細は次を参照: |auto-input-switch-ja.os_settings.macos.lang_inputs|

      Ru:
        __default: '1049'
        __desc:
          en: Input method ID for Russian.
          ja: ロシア語の入力言語 ID 。

      Ja:
        __default: '1041'
        __desc:
          en: Input method ID for Japanese.
          ja: 日本語の入力言語 ID 。

      Zh:
        __default: '2052'
        __desc:
          en: Input method ID for Chinese.
          ja: 中国語の入力言語 ID 。

      Ko:
        __default: '1042'
        __desc:
          en: Input method ID for Korean.
          ja: 韓国語の入力言語 ID 。

  linux:
    enable:
      __default: true
      __desc:
        en: Enable Linux-specific settings?
        ja: Linux 用の設定を有効にする？

    cmd_get:
      __default: 'ibus engine'
      __desc:
        en: Command to get the current input method ID.
        ja: 現在の入力言語 ID を取得するコマンド。

    cmd_set:
      __default: 'ibus engine %s'
      __desc:
        en: Command to set a new input method (`%s` will be replaced with the target ID).
        ja: 入力言語を切り替えるコマンド (`%s` が切り替え先の入力言語 ID で置換される) 。

    normal_input:
      __default: false
      __desc:
        en: |-
          Input method used for Normalize (`false` = auto-detect).
          Example: >lua
            normal_input = 'xkb:us::eng', -- US English.
          <
          Other formats:
            See: |auto-input-switch.os_settings.macos.normal_input|
        ja: |-
          Normalize 時に使用する入力言語 (`false` = 自動検出) 。
          例: >lua
            normal_input = 'xkb:us::eng', -- US English
          <
          その他のフォーマット:
            参照: |auto-input-switch-ja.os_settings.macos.normal_input|

    lang_inputs:
      __desc:
        en: |-
          Input methods corresponding to `match.languages`.
          For more details, see: |auto-input-switch.os_settings.macos.lang_inputs|
        ja: |-
          `match.languages` 内の各言語に紐づける入力言語の設定。
          その他の詳細は次を参照: |auto-input-switch-ja.os_settings.macos.lang_inputs|

      Ru:
        __default: 'xkb:ru::rus'
        __desc:
          en: Input method ID for Russian.
          ja: ロシア語の入力言語 ID 。

      Ja:
        __default: 'mozc-jp'
        __desc:
          en: Input method ID for Japanese.
          ja: 日本語の入力言語 ID 。

      Zh:
        __default: 'libpinyin'
        __desc:
          en: Input method ID for Chinese.
          ja: 中国語の入力言語 ID 。

      Ko:
        __default: 'hangul'
        __desc:
          en: Input method ID for Korean.
          ja: 韓国語の入力言語 ID 。

